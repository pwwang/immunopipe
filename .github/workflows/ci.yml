name: ci

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry config virtualenvs.create false
          poetry install -v
      - name: Test if immunopipe can run
        run: immunopipe --help+ 2>&1 | grep "Integrative analysis for scRNA-seq and scTCR-seq data"
      - name: Print help message
        run: immunopipe --help+ 2>&1
        if: failure()

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[wip]')"
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          # load: true
          push: true
          tags: justold/immunopipe:${{ github.ref_name }}
      # - name: Slim image
      #   uses: kitabisa/docker-slim-action@v1
      #   env:
      #     DSLIM_HTTP_PROBE: false
      #   with:
      #     target: justold/immunopipe:${{ github.ref_name }}
      #     overwrite: true
      # - name: Push slim image
      #   run: |
      #     docker push justold/immunopipe:${{ github.ref_name }}
      - name: Build and push full
        uses: docker/build-push-action@v5
        with:
          push: true
          pull: false
          # load: true
          file: Dockerfile.full
          tags: justold/immunopipe:${{ github.ref_name }}-full
          build-args: |
            SRC_IMAGE=justold/immunopipe:${{ github.ref_name }}
      # - name: Slim full image
      #   uses: kitabisa/docker-slim-action@v1
      #   env:
      #     DSLIM_HTTP_PROBE: false
      #   with:
      #     target: justold/immunopipe:${{ github.ref_name }}-full
      #     overwrite: true
      # - name: Push slim full image
      #   run: |
      #     docker push justold/immunopipe:${{ github.ref_name }}-full

  pypi:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Publish to PyPI
        run: poetry publish --build -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_PASSWORD }}
        if: success()
